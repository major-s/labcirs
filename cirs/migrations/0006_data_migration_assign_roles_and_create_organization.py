# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-08-23 15:05
from __future__ import unicode_literals

#from django.contrib.auth.models import User, Permission
from django.db import migrations


def create_reporter(apps, schema_editor):
    # only reporter should have the permission to add incidents, therefore
    # we search for this user
    # in new installations there are no permissions during initial migration
    # therefore try is necessary
    
    try:
        Permission = apps.get_model('auth', 'Permission')
        permission = Permission.objects.get(codename='add_criticalincident')
        try:
            User = apps.get_model('auth', 'User')
            reporter = User.objects.get(user_permissions=permission)
            Reporter = apps.get_model('cirs', 'Reporter')
            rep = Reporter.objects.create(user=reporter)
        except User.DoesNotExist:
            print 'User does not exist'
    except Permission.DoesNotExist:
        print 'Permission does not exist'


def delete_reporter(apps, schema_editor):
    Reporter = apps.get_model('cirs', 'Reporter')
    if Reporter.objects.count() > 0:
        Reporter.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('cirs', '0005_organization_and_roles'),
    ]

    operations = [
        migrations.RunPython(create_reporter, reverse_code=delete_reporter)
    ]

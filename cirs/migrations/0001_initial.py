# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-28 17:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CriticalIncident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of incident')),
                ('incident', models.TextField(verbose_name='Mistake / problem / critical incident')),
                ('reason', models.TextField(verbose_name='Cause of failure')),
                ('immediate_action', models.TextField(help_text='Immediate action or suggestion regarding prevention / troubleshooting', verbose_name='Immediate action')),
                ('preventability', models.CharField(choices=[('indistinct', 'appraisal not possible'), ('avoidable', 'The incident was avoidable'), ('not avoidable', 'The incident was not avoidable')], help_text='In your opinion, was the incident avoidable or not?', max_length=255, verbose_name='Preventability')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/%Y/%m/%d', verbose_name='Photo')),
                ('public', models.BooleanField(choices=[(True, 'I agree that this report will be made public to people outside the quality management team after copyedit.'), (False, 'I DO NOT agree that this report will be made public to people outside the quality management team even after copyedit.')], default=None, verbose_name='Publication')),
                ('reported', models.DateField(auto_now_add=True, verbose_name='Date of report')),
                ('action', models.TextField(blank=True, verbose_name='Action')),
                ('responsibilty', models.CharField(blank=True, max_length=255, verbose_name='Responsibility')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='Review date')),
                ('status', models.CharField(choices=[('new', 'new'), ('in process', 'in process'), ('under supervision', 'under supervision'), ('completed', 'completed')], default='new', max_length=255, verbose_name='Status')),
                ('risk', models.CharField(blank=True, choices=[('low', 'low'), ('middle', 'middle'), ('high', 'high')], max_length=255, verbose_name='Risk classification')),
                ('frequency', models.CharField(blank=True, choices=[('singular case', 'singular case (for the first time)'), ('seldom', 'seldom (once per year)'), ('occasional', 'occasional (once per month)'), ('frequent', 'frequent (once per Week)'), ('regular', 'regular (daily)')], max_length=255, verbose_name='Frequency')),
                ('hazard', models.CharField(blank=True, choices=[('very low', 'very low'), ('low', 'low'), ('moderate', 'moderate'), ('high', 'high'), ('very high', 'very high')], help_text='For emploees or science', max_length=255, verbose_name='Hazard')),
                ('category', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('organisation/communication', 'organisation/communication'), ('technique/methods', 'technique/methods'), ('knowledge/training', 'knowledge/training'), ('concentration/attention (mistake/slip)', 'concentration/attention (mistake/slip)'), ('infrastructure', 'infrastructure'), ('other', 'other')], max_length=255, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Critical incident',
                'verbose_name_plural': 'Critical incidents',
            },
        ),
        migrations.CreateModel(
            name='LabCIRSConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_info_en', models.TextField(verbose_name='Login info (in English)')),
                ('login_info_de', models.TextField(verbose_name='Login info (in German)')),
                ('login_info_url', models.URLField(blank=True, verbose_name='URL for login info')),
                ('login_info_link_text_en', models.CharField(blank=True, max_length=255, verbose_name='Link text (in English)')),
                ('login_info_link_text_de', models.CharField(blank=True, max_length=255, verbose_name='Link text (in German)')),
                ('send_notification', models.BooleanField(help_text='Check if you wish to be informed about new incidents per email.<br>\n            IMPORTANT: Sender email has to exist and at least one recipient is necessary.<br>\n            BUG: If you had no recipients selected before changingn this setting,\n            please choose at least one and save.<br>\n            Not till then you can activate sending of notifications.', verbose_name='Send notification')),
                ('notification_sender_email', models.EmailField(blank=True, help_text='Enter a valid email address you want to use as a sender', max_length=254, verbose_name='Notification sender email address')),
                ('notification_text', models.TextField(blank=True, help_text='Enter the message which will be send to the reviewer(s) when a new incident is reported', verbose_name='Notification text')),
                ('notification_recipients', models.ManyToManyField(blank=True, help_text='Choose recipients of the notification email', null=True, to=settings.AUTH_USER_MODEL, verbose_name='Notification recipients')),
            ],
            options={
                'verbose_name': 'LabCIRS configuration',
                'verbose_name_plural': 'LabCIRS configuration',
            },
        ),
        migrations.CreateModel(
            name='PublishableIncident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_de', models.CharField(max_length=255, verbose_name='Incident (in German)')),
                ('incident_en', models.CharField(max_length=255, verbose_name='Incident (in English)')),
                ('description_de', models.TextField(blank=True, verbose_name='Description (in German)')),
                ('description_en', models.TextField(blank=True, verbose_name='Description (in English)')),
                ('measures_and_consequences_de', models.TextField(blank=True, verbose_name='Measures and consequences (in German)')),
                ('measures_and_consequences_en', models.TextField(blank=True, verbose_name='Measures and consequences (in English)')),
                ('publish', models.BooleanField(default=False, verbose_name='Publish')),
                ('critical_incident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cirs.CriticalIncident', verbose_name='Critical incident')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'Publishable incident',
                'verbose_name_plural': 'Publishable incidents',
            },
        ),
    ]

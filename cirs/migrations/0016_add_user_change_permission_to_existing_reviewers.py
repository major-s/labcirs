# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-14 13:26
from __future__ import unicode_literals

from django.core.exceptions import ValidationError
from django.db import migrations

def add_permission(apps, schema_editor):
    Reviewer = apps.get_model('cirs', 'Reviewer')
    Permission = apps.get_model('auth', 'Permission')
    try:
        permission = Permission.objects.get(codename='change_user')
        
        for reviewer in Reviewer.objects.all():
            reviewer.user.user_permissions.add(permission)
    except Permission.DoesNotExist:
        if Reviewer.objects.count() > 0:
            raise ValidationError('Permission does not exist although there '
                                  'are reviewers in the database!')

def remove_permission(apps, schema_editor):
    Reviewer = apps.get_model('cirs', 'Reviewer')
    Permission = apps.get_model('auth', 'Permission')
    try:
        permission = Permission.objects.get(codename='change_user')

        for reviewer in Reviewer.objects.all():
            reviewer.user.user_permissions.remove(permission)
    except Permission.DoesNotExist:
        if Reviewer.objects.count() > 0:
            raise ValidationError('Permission does not exist although there '
                                  'are reviewers in the database!')

class Migration(migrations.Migration):

    dependencies = [
        ('cirs', '0015_auto_20190108_1704'),
    ]

    operations = [
        migrations.RunPython(add_permission, remove_permission),
    ]
